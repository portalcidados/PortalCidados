{
  "version": 3,
  "sources": ["../../jstree/src/jstree.search.js"],
  "sourcesContent": ["/**\n * ### Search plugin\n *\n * Adds search functionality to jsTree.\n */\n/*globals jQuery, define, exports, require, document */\n(function (factory) {\n\t\"use strict\";\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine('jstree.search', ['jquery','./jstree.js'], factory);\n\t}\n\telse if(typeof exports === 'object') {\n\t\tfactory(require('jquery'), require('./jstree.js'));\n\t}\n\telse {\n\t\tfactory(jQuery, jQuery.jstree);\n\t}\n}(function ($, jstree, undefined) {\n\t\"use strict\";\n\n\tif($.jstree.plugins.search) { return; }\n\n\t/**\n\t * stores all defaults for the search plugin\n\t * @name $.jstree.defaults.search\n\t * @plugin search\n\t */\n\t$.jstree.defaults.search = {\n\t\t/**\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results.\n\t\t *\n\t\t * A `str` (which is the search string) parameter will be added with the request, an optional `inside` parameter will be added if the search is limited to a node id. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 3 parameters - the search string, the callback to call with the array of nodes to load, and the optional node ID to limit the search to\n\t\t * @name $.jstree.defaults.search.ajax\n\t\t * @plugin search\n\t\t */\n\t\tajax : false,\n\t\t/**\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\n\t\t * @name $.jstree.defaults.search.fuzzy\n\t\t * @plugin search\n\t\t */\n\t\tfuzzy : false,\n\t\t/**\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.search.case_sensitive\n\t\t * @plugin search\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * Indicates if the tree should be filtered (by default) to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers).\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\n\t\t * @name $.jstree.defaults.search.show_only_matches\n\t\t * @plugin search\n\t\t */\n\t\tshow_only_matches : false,\n\t\t/**\n\t\t * Indicates if the children of matched element are shown (when show_only_matches is true)\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\n\t\t * @name $.jstree.defaults.search.show_only_matches_children\n\t\t * @plugin search\n\t\t */\n\t\tshow_only_matches_children : false,\n\t\t/**\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\n\t\t * @plugin search\n\t\t */\n\t\tclose_opened_onclear : true,\n\t\t/**\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_leaves_only\n\t\t * @plugin search\n\t\t */\n\t\tsearch_leaves_only : false,\n\t\t/**\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_callback\n\t\t * @plugin search\n\t\t */\n\t\tsearch_callback : false\n\t};\n\n\t$.jstree.plugins.search = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\t\t\tthis._data.search.som = false;\n\t\t\tthis._data.search.smc = false;\n\t\t\tthis._data.search.hdn = [];\n\n\t\t\tthis.element\n\t\t\t\t.on(\"search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\n\t\t\t\t\t\t\tvar m = this._model.data, i, j, p = [], k, l;\n\t\t\t\t\t\t\tfor(i = 0, j = data.res.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif(m[data.res[i]] && !m[data.res[i]].state.hidden) {\n\t\t\t\t\t\t\t\t\tp.push(data.res[i]);\n\t\t\t\t\t\t\t\t\tp = p.concat(m[data.res[i]].parents);\n\t\t\t\t\t\t\t\t\tif(this._data.search.smc) {\n\t\t\t\t\t\t\t\t\t\tfor (k = 0, l = m[data.res[i]].children_d.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\t\t\tif (m[m[data.res[i]].children_d[k]] && !m[m[data.res[i]].children_d[k]].state.hidden) {\n\t\t\t\t\t\t\t\t\t\t\t\tp.push(m[data.res[i]].children_d[k]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tp = $.vakata.array_remove_item($.vakata.array_unique(p), $.jstree.root);\n\t\t\t\t\t\t\tthis._data.search.hdn = this.hide_all(true);\n\t\t\t\t\t\t\tthis.show_node(p, true);\n\t\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this))\n\t\t\t\t.on(\"clear_search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\n\t\t\t\t\t\t\tthis.show_node(this._data.search.hdn, true);\n\t\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this));\n\t\t};\n\t\t/**\n\t\t * used to search the tree nodes for a given string\n\t\t * @name search(str [, skip_async])\n\t\t * @param {String} str the search string\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\n\t\t * @param {Boolean} show_only_matches if set to true only matching nodes will be shown (keep in mind this can be very slow on large trees or old browsers)\n\t\t * @param {mixed} inside an optional node to whose children to limit the search\n\t\t * @param {Boolean} append if set to true the results of this search are appended to the previous search\n\t\t * @plugin search\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.search = function (str, skip_async, show_only_matches, inside, append, show_only_matches_children) {\n\t\t\tif(str === false || $.vakata.trim(str.toString()) === \"\") {\n\t\t\t\treturn this.clear_search();\n\t\t\t}\n\t\t\tinside = this.get_node(inside);\n\t\t\tinside = inside && (inside.id || inside.id === 0) ? inside.id : null;\n\t\t\tstr = str.toString();\n\t\t\tvar s = this.settings.search,\n\t\t\t\ta = s.ajax ? s.ajax : false,\n\t\t\t\tm = this._model.data,\n\t\t\t\tf = null,\n\t\t\t\tr = [],\n\t\t\t\tp = [], i, j;\n\t\t\tif(this._data.search.res.length && !append) {\n\t\t\t\tthis.clear_search();\n\t\t\t}\n\t\t\tif(show_only_matches === undefined) {\n\t\t\t\tshow_only_matches = s.show_only_matches;\n\t\t\t}\n\t\t\tif(show_only_matches_children === undefined) {\n\t\t\t\tshow_only_matches_children = s.show_only_matches_children;\n\t\t\t}\n\t\t\tif(!skip_async && a !== false) {\n\t\t\t\tif($.vakata.is_function(a)) {\n\t\t\t\t\treturn a.call(this, str, function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.vakata.is_array(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}.bind(this), inside);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ta = $.extend({}, a);\n\t\t\t\t\tif(!a.data) { a.data = {}; }\n\t\t\t\t\ta.data.str = str;\n\t\t\t\t\tif(inside) {\n\t\t\t\t\t\ta.data.inside = inside;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._data.search.lastRequest) {\n\t\t\t\t\t\tthis._data.search.lastRequest.abort();\n\t\t\t\t\t}\n\t\t\t\t\tthis._data.search.lastRequest = $.ajax(a)\n\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t}.bind(this))\n\t\t\t\t\t\t.done(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.vakata.is_array(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\treturn this._data.search.lastRequest;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!append) {\n\t\t\t\tthis._data.search.str = str;\n\t\t\t\tthis._data.search.dom = $();\n\t\t\t\tthis._data.search.res = [];\n\t\t\t\tthis._data.search.opn = [];\n\t\t\t\tthis._data.search.som = show_only_matches;\n\t\t\t\tthis._data.search.smc = show_only_matches_children;\n\t\t\t}\n\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\n\t\t\t$.each(m[inside ? inside : $.jstree.root].children_d, function (ii, i) {\n\t\t\t\tvar v = m[i];\n\t\t\t\tif(v.text && !v.state.hidden && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) ) {\n\t\t\t\t\tr.push(i);\n\t\t\t\t\tp = p.concat(v.parents);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(r.length) {\n\t\t\t\tp = $.vakata.array_unique(p);\n\t\t\t\tfor(i = 0, j = p.length; i < j; i++) {\n\t\t\t\t\tif(p[i] !== $.jstree.root && m[p[i]] && this.open_node(p[i], null, 0) === true) {\n\t\t\t\t\t\tthis._data.search.opn.push(p[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!append) {\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\t\tthis._data.search.res = r;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.search.dom = this._data.search.dom.add($(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))));\n\t\t\t\t\tthis._data.search.res = $.vakata.array_unique(this._data.search.res.concat(r));\n\t\t\t\t}\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\n\t\t\t * @param {String} str the search string\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res, show_only_matches : show_only_matches });\n\t\t};\n\t\t/**\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\n\t\t * @name clear_search()\n\t\t * @plugin search\n\t\t * @trigger clear_search.jstree\n\t\t */\n\t\tthis.clear_search = function () {\n\t\t\tif(this.settings.search.close_opened_onclear) {\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name clear_search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\n\t\t\t * @param {String} str the search string (the last search string)\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\n\t\t\tif(this._data.search.res.length) {\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(this._data.search.res, function (v) {\n\t\t\t\t\treturn \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&');\n\t\t\t\t}).join(', #')));\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\n\t\t\t}\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\t\t\tthis._data.search.dom = $();\n\t\t};\n\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\n\t\t\tif(obj) {\n\t\t\t\tif($.inArray(obj.id, this._data.search.res) !== -1) {\n\t\t\t\t\tvar i, j, tmp = null;\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\ttmp.className += ' jstree-search';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t};\n\n\t// helpers\n\t(function ($) {\n\t\t// from http://kiro.me/projects/fuse.html\n\t\t$.vakata.search = function(pattern, txt, options) {\n\t\t\toptions = options || {};\n\t\t\toptions = $.extend({}, $.vakata.search.defaults, options);\n\t\t\tif(options.fuzzy !== false) {\n\t\t\t\toptions.fuzzy = true;\n\t\t\t}\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\n\t\t\tvar MATCH_LOCATION\t= options.location,\n\t\t\t\tMATCH_DISTANCE\t= options.distance,\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold,\n\t\t\t\tpatternLen = pattern.length,\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\n\t\t\tif(patternLen > 32) {\n\t\t\t\toptions.fuzzy = false;\n\t\t\t}\n\t\t\tif(options.fuzzy) {\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\n\t\t\t\tpattern_alphabet = (function () {\n\t\t\t\t\tvar mask = {},\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\n\t\t\t\t\t}\n\t\t\t\t\treturn mask;\n\t\t\t\t}());\n\t\t\t\tmatch_bitapScore = function (e, x) {\n\t\t\t\t\tvar accuracy = e / patternLen,\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\n\t\t\t\t\tif(!MATCH_DISTANCE) {\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\n\t\t\t\t\t}\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\n\t\t\t\t};\n\t\t\t}\n\t\t\tsearch = function (text) {\n\t\t\t\ttext = options.caseSensitive ? text.toString() : text.toString().toLowerCase();\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: true,\n\t\t\t\t\t\tscore: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif(!options.fuzzy) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: false,\n\t\t\t\t\t\tscore: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvar i, j,\n\t\t\t\t\ttextLen = text.length,\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\n\t\t\t\t\tbinMin, binMid,\n\t\t\t\t\tbinMax = patternLen + textLen,\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\n\t\t\t\t\tscore = 1,\n\t\t\t\t\tlocations = [];\n\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\n\t\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbestLoc = -1;\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tbinMin = 0;\n\t\t\t\t\tbinMid = binMax;\n\t\t\t\t\twhile (binMin < binMid) {\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\n\t\t\t\t\t\t\tbinMin = binMid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\n\t\t\t\t\t}\n\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\n\t\t\t\t\trd = new Array(finish + 2);\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rd[j] & matchmask) {\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\n\t\t\t\t\t\t\t\tscoreThreshold = score;\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlastRd = rd;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: bestLoc >= 0,\n\t\t\t\t\tscore: score\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\n\t\t};\n\t\t$.vakata.search.defaults = {\n\t\t\tlocation : 0,\n\t\t\tdistance : 100,\n\t\t\tthreshold : 0.6,\n\t\t\tfuzzy : false,\n\t\t\tcaseSensitive : false\n\t\t};\n\t}($));\n\n\t// include the search plugin by default\n\t// $.jstree.defaults.plugins.push(\"search\");\n}));\n"],
  "mappings": "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",
  "names": ["i", "$"]
}

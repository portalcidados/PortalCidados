{
  "version": 3,
  "sources": ["../../jstree/src/jstree.checkbox.js"],
  "sourcesContent": ["/**\n * ### Checkbox plugin\n *\n * This plugin renders checkbox icons in front of each node, making multiple selection much easier.\n * It also supports tri-state behavior, meaning that if a node has a few of its children checked it will be rendered as undetermined, and state will be propagated up.\n */\n/*globals jQuery, define, exports, require, document */\n(function (factory) {\n\t\"use strict\";\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine('jstree.checkbox', ['jquery','./jstree.js'], factory);\n\t}\n\telse if(typeof exports === 'object') {\n\t\tfactory(require('jquery'), require('./jstree.js'));\n\t}\n\telse {\n\t\tfactory(jQuery, jQuery.jstree);\n\t}\n}(function ($, jstree, undefined) {\n\t\"use strict\";\n\n\tif($.jstree.plugins.checkbox) { return; }\n\n\tvar _i = document.createElement('I');\n\t_i.className = 'jstree-icon jstree-checkbox';\n\t_i.setAttribute('role', 'presentation');\n\t/**\n\t * stores all defaults for the checkbox plugin\n\t * @name $.jstree.defaults.checkbox\n\t * @plugin checkbox\n\t */\n\t$.jstree.defaults.checkbox = {\n\t\t/**\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.visible\n\t\t * @plugin checkbox\n\t\t */\n\t\tvisible\t\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.three_state\n\t\t * @plugin checkbox\n\t\t */\n\t\tthree_state\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.whole_node\n\t\t * @plugin checkbox\n\t\t */\n\t\twhole_node\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\n\t\t * @plugin checkbox\n\t\t */\n\t\tkeep_selected_style\t: true,\n\t\t/**\n\t\t * This setting controls how cascading and undetermined nodes are applied.\n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used.\n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\n\t\t * @name $.jstree.defaults.checkbox.cascade\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade\t\t\t\t: '',\n\t\t/**\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing.\n\t\t * @name $.jstree.defaults.checkbox.tie_selection\n\t\t * @plugin checkbox\n\t\t */\n\t\ttie_selection\t\t: true,\n\n\t\t/**\n\t\t * This setting controls if cascading down affects disabled checkboxes\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_disabled\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade_to_disabled : true,\n\n\t\t/**\n\t\t * This setting controls if cascading down affects hidden checkboxes\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_hidden\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade_to_hidden : true\n\t};\n\t$.jstree.plugins.checkbox = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis._data.checkbox.uto = false;\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tif(this.settings.checkbox.three_state) {\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\n\t\t\t}\n\t\t\tthis.element\n\t\t\t\t.on(\"init.jstree\", function () {\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this))\n\t\t\t\t.on(\"loading.jstree\", function () {\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\n\t\t\t\t\t}.bind(this));\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', function () {\n\t\t\t\t\t\t\t// only if undetermined is in setting\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout(this._undetermined.bind(this), 50);\n\t\t\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\ti, j;\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = m[dpc[i]].state.checked || (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', function (e, data) {\n\t\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').attr('aria-selected', true).addClass( t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\n\t\t\t\t\t\t}.bind(this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', function (e, data) {\n\t\t\t\t\t\t\tvar self = this,\n\t\t\t\t\t\t\t\tobj = data.node,\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\n\t\t\t\t\t\t\t\tsel = {}, cur = this._data[ t ? 'core' : 'checkbox' ].selected;\n\n\t\t\t\t\t\t\tfor (i = 0, j = cur.length; i < j; i++) {\n\t\t\t\t\t\t\t\tsel[cur[i]] = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, true);\n\t\t\t\t\t\t\t\tvar temp = obj.children_d.concat(obj.id);\n\t\t\t\t\t\t\t\tfor (i = 0, j = temp.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tif (selectedIds.indexOf(temp[i]) > -1) {\n\t\t\t\t\t\t\t\t\t\tsel[temp[i]] = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tdelete sel[temp[i]];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\twhile(par && par.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tsel[par.id] = true;\n\t\t\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').attr('aria-selected', true).addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcur = [];\n\t\t\t\t\t\t\tfor (i in sel) {\n\t\t\t\t\t\t\t\tif (sel.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\tcur.push(i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\n\t\t\t\t\t\t}.bind(this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', function (e, data) {\n\t\t\t\t\t\t\tvar obj = this.get_node($.jstree.root),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', function (e, data) {\n\t\t\t\t\t\t\tvar self = this,\n\t\t\t\t\t\t\t\tobj = data.node,\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\n\t\t\t\t\t\t\t\tcur = this._data[ t ? 'core' : 'checkbox' ].selected, sel = {},\n\t\t\t\t\t\t\t\tstillSelectedIds = [],\n\t\t\t\t\t\t\t\tallIds = obj.children_d.concat(obj.id);\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, false);\n\n\t\t\t\t\t\t\t\tcur = $.vakata.array_filter(cur, function(id) {\n\t\t\t\t\t\t\t\t\treturn allIds.indexOf(id) === -1 || selectedIds.indexOf(id) > -1;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// only apply up if cascade up is enabled and if this node is not selected\n\t\t\t\t\t\t\t// (if all child nodes are disabled and cascade_to_disabled === false then this node will till be selected).\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1 && cur.indexOf(obj.id) === -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').attr('aria-selected', false).removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcur = $.vakata.array_filter(cur, function(id) {\n\t\t\t\t\t\t\t\t\treturn obj.parents.indexOf(id) === -1;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\n\t\t\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('delete_node.jstree', function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').attr('aria-selected', true).addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this))\n\t\t\t\t\t.on('move_node.jstree', function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\n\t\t\t\t\t\t\t\told_par = data.old_parent,\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(!is_multi) {\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\n\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').attr('aria-selected', true).addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tp = new_par;\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').attr('aria-selected', true).addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').attr('aria-selected', false).removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * get an array of all nodes whose state is \"undetermined\"\n\t\t * @name get_undetermined([full])\n\t\t * @param  {boolean} full: if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_undetermined = function (full) {\n\t\t\tif (this.settings.checkbox.cascade.indexOf('undetermined') === -1) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tvar i, j, k, l, o = {}, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this, r = [];\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\n\t\t\t\t\tfor(k = 0, l = m[s[i]].parents.length; k < l; k++) {\n\t\t\t\t\t\tif(o[m[s[i]].parents[k]] !== undefined) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(m[s[i]].parents[k] !== $.jstree.root) {\n\t\t\t\t\t\t\to[m[s[i]].parents[k]] = true;\n\t\t\t\t\t\t\tp.push(m[s[i]].parents[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt for server side undetermined state\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\n\t\t\t\t.each(function () {\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\n\t\t\t\t\t\n\t\t\t\t\tif(!tmp) { return; }\n\t\t\t\t\t\n\t\t\t\t\tif(!tmp.state.loaded) {\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\n\t\t\t\t\t\t\tif(o[tmp.id] === undefined && tmp.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\to[tmp.id] = true;\n\t\t\t\t\t\t\t\tp.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor(k = 0, l = tmp.parents.length; k < l; k++) {\n\t\t\t\t\t\t\t\tif(o[tmp.parents[k]] === undefined && tmp.parents[k] !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\to[tmp.parents[k]] = true;\n\t\t\t\t\t\t\t\t\tp.push(tmp.parents[k]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\n\t\t\t\t\t\t\t\tif(o[tmp2.id] === undefined && tmp2.id !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\to[tmp2.id] = true;\n\t\t\t\t\t\t\t\t\tp.push(tmp2.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor(k = 0, l = tmp2.parents.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\tif(o[tmp2.parents[k]] === undefined && tmp2.parents[k] !== $.jstree.root) {\n\t\t\t\t\t\t\t\t\t\to[tmp2.parents[k]] = true;\n\t\t\t\t\t\t\t\t\t\tp.push(tmp2.parents[k]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\tr.push(full ? m[p[i]] : p[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t};\n\t\t/**\n\t\t * set the undetermined state where and if necessary. Used internally.\n\t\t * @private\n\t\t * @name _undetermined()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis._undetermined = function () {\n\t\t\tif(this.element === null) { return; }\n\t\t\tvar p = this.get_undetermined(false), i, j, s;\n\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\n\t\t\t\ts = this.get_node(p[i], true);\n\t\t\t\tif(s && s.length) {\n\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, is_callback, force_render) {\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\n\t\t\tif(obj) {\n\t\t\t\tvar i, j, tmp = null, icon = null;\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(tmp) {\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\n\t\t\t\t\ticon = _i.cloneNode(false);\n\t\t\t\t\tif(this._model.data[obj.id].state.checkbox_disabled) { icon.className += ' jstree-checkbox-disabled'; }\n\t\t\t\t\ttmp.insertBefore(icon, tmp.childNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\tthis._data.checkbox.uto = setTimeout(this._undetermined.bind(this), 50);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\t/**\n\t\t * show the node checkbox icons\n\t\t * @name show_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * hide the node checkbox icons\n\t\t * @name hide_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\n\t\t/**\n\t\t * checks if a node is in an undetermined state\n\t\t * @name is_undetermined(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tthis.is_undetermined = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t/**\n\t\t * disable a node's checkbox\n\t\t * @name disable_checkbox(obj)\n\t\t * @param {mixed} obj an array can be used too\n\t\t * @trigger disable_checkbox.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.disable_checkbox = function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.vakata.is_array(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.disable_checkbox(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.checkbox_disabled) {\n\t\t\t\tobj.state.checkbox_disabled = true;\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-checkbox-disabled');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node's checkbox is disabled\n\t\t\t\t * @event\n\t\t\t\t * @name disable_checkbox.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('disable_checkbox', { 'node' : obj });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * enable a node's checkbox\n\t\t * @name enable_checkbox(obj)\n\t\t * @param {mixed} obj an array can be used too\n\t\t * @trigger enable_checkbox.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.enable_checkbox = function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.vakata.is_array(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.enable_checkbox(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.checkbox_disabled) {\n\t\t\t\tobj.state.checkbox_disabled = false;\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').removeClass('jstree-checkbox-disabled');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node's checkbox is enabled\n\t\t\t\t * @event\n\t\t\t\t * @name enable_checkbox.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('enable_checkbox', { 'node' : obj });\n\t\t\t}\n\t\t};\n\n\t\tthis.activate_node = function (obj, e) {\n\t\t\tif($(e.target).hasClass('jstree-checkbox-disabled')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\te.ctrlKey = true;\n\t\t\t}\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\n\t\t\t}\n\t\t\tif(this.is_disabled(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.is_checked(obj)) {\n\t\t\t\tthis.uncheck_node(obj, e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.check_node(obj, e);\n\t\t\t}\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t};\n\t\tthis.delete_node = function (obj) {\n\t\t\tif(this.settings.checkbox.tie_selection || $.vakata.is_array(obj)) {\n\t\t\t\treturn parent.delete_node.call(this, obj);\n\t\t\t}\n\t\t\tvar tmp, k, l, c = false;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\ttmp = obj.children_d.concat([]);\n\t\t\ttmp.push(obj.id);\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tif(this._model.data[tmp[k]].state.checked) {\n\t\t\t\t\tc = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (c) {\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_filter(this._data.checkbox.selected, function (v) {\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn parent.delete_node.call(this, obj);\n\t\t};\n\n\t\t/**\n\t\t * Cascades checked state to a node and all its descendants. This function does NOT affect hidden and disabled nodes (or their descendants).\n\t\t * However if these unaffected nodes are already selected their ids will be included in the returned array.\n\t\t * @private\n\t\t * @name _cascade_new_checked_state(id, checkedState)\n\t\t * @param {string} id the node ID\n\t\t * @param {bool} checkedState should the nodes be checked or not\n\t\t * @returns {Array} Array of all node id's (in this tree branch) that are checked.\n\t\t */\n\t\tthis._cascade_new_checked_state = function (id, checkedState) {\n\t\t\tvar self = this;\n\t\t\tvar t = this.settings.checkbox.tie_selection;\n\t\t\tvar node = this._model.data[id];\n\t\t\tvar selectedNodeIds = [];\n\t\t\tvar selectedChildrenIds = [], i, j, selectedChildIds;\n\n\t\t\tif (\n\t\t\t\t(this.settings.checkbox.cascade_to_disabled || !node.state.disabled) &&\n\t\t\t\t(this.settings.checkbox.cascade_to_hidden || !node.state.hidden)\n\t\t\t) {\n\t\t\t\t//First try and check/uncheck the children\n\t\t\t\tif (node.children) {\n\t\t\t\t\tfor (i = 0, j = node.children.length; i < j; i++) {\n\t\t\t\t\t\tvar childId = node.children[i];\n\t\t\t\t\t\tselectedChildIds = self._cascade_new_checked_state(childId, checkedState);\n\t\t\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\n\t\t\t\t\t\tif (selectedChildIds.indexOf(childId) > -1) {\n\t\t\t\t\t\t\tselectedChildrenIds.push(childId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar dom = self.get_node(node, true);\n\n\t\t\t\t//A node's state is undetermined if some but not all of it's children are checked/selected .\n\t\t\t\tvar undetermined = selectedChildrenIds.length > 0 && selectedChildrenIds.length < node.children.length;\n\n\t\t\t\tif(node.original && node.original.state && node.original.state.undetermined) {\n\t\t\t\t\tnode.original.state.undetermined = undetermined;\n\t\t\t\t}\n\n\t\t\t\t//If a node is undetermined then remove selected class\n\t\t\t\tif (undetermined) {\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\tdom.children('.jstree-anchor').attr('aria-selected', false).removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t}\n\t\t\t\t//Otherwise, if the checkedState === true (i.e. the node is being checked now) and all of the node's children are checked (if it has any children),\n\t\t\t\t//check the node and style it correctly.\n\t\t\t\telse if (checkedState && selectedChildrenIds.length === node.children.length) {\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = checkedState;\n\t\t\t\t\tselectedNodeIds.push(node.id);\n\n\t\t\t\t\tdom.children('.jstree-anchor').attr('aria-selected', true).addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\tdom.children('.jstree-anchor').attr('aria-selected', false).removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselectedChildIds = this.get_checked_descendants(id);\n\n\t\t\t\tif (node.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\tselectedChildIds.push(node.id);\n\t\t\t\t}\n\n\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\n\t\t\t}\n\n\t\t\treturn selectedNodeIds;\n\t\t};\n\n\t\t/**\n\t\t * Gets ids of nodes selected in branch (of tree) specified by id (does not include the node specified by id)\n\t\t * @name get_checked_descendants(obj)\n\t\t * @param {string} id the node ID\n\t\t * @return {Array} array of IDs\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_checked_descendants = function (id) {\n\t\t\tvar self = this;\n\t\t\tvar t = self.settings.checkbox.tie_selection;\n\t\t\tvar node = self._model.data[id];\n\n\t\t\treturn $.vakata.array_filter(node.children_d, function(_id) {\n\t\t\t\treturn self._model.data[_id].state[ t ? 'selected' : 'checked' ];\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\n\t\t * @name check_node(obj)\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\n\t\t * @trigger check_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.vakata.is_array(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.check_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.checked) {\n\t\t\t\tobj.state.checked = true;\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name check_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\n\t\t * @name uncheck_node(obj)\n\t\t * @param {mixed} obj an array can be used to uncheck multiple nodes\n\t\t * @trigger uncheck_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.vakata.is_array(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.checked) {\n\t\t\t\tobj.state.checked = false;\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name uncheck_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\n\t\t * @name check_all()\n\t\t * @trigger check_all.jstree, changed.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tthis._data.checkbox.selected = this._model.data[$.jstree.root].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name check_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\n\t\t};\n\t\t/**\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\n\t\t * @name uncheck_all()\n\t\t * @trigger uncheck_all.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name uncheck_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\n\t\t};\n\t\t/**\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\n\t\t * @name is_checked(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.is_checked = function (obj) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\n\t\t\treturn obj.state.checked;\n\t\t};\n\t\t/**\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\n\t\t * @name get_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\n\t\t\treturn full ? $.map(this._data.checkbox.selected, function (i) { return this.get_node(i); }.bind(this)) : this._data.checkbox.selected.slice();\n\t\t};\n\t\t/**\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\n\t\t * @name get_top_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_top_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, function (i) { return this.get_node(i); }.bind(this)) : tmp;\n\t\t};\n\t\t/**\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\n\t\t * @name get_bottom_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_bottom_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, function (i) { return this.get_node(i); }.bind(this)) : obj;\n\t\t};\n\t\tthis.load_node = function (obj, callback) {\n\t\t\tvar k, l, i, j, c, tmp;\n\t\t\tif(!$.vakata.is_array(obj) && !this.settings.checkbox.tie_selection) {\n\t\t\t\ttmp = this.get_node(obj);\n\t\t\t\tif(tmp && tmp.state.loaded) {\n\t\t\t\t\tfor(k = 0, l = tmp.children_d.length; k < l; k++) {\n\t\t\t\t\t\tif(this._model.data[tmp.children_d[k]].state.checked) {\n\t\t\t\t\t\t\tc = true;\n\t\t\t\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, tmp.children_d[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parent.load_node.apply(this, arguments);\n\t\t};\n\t\tthis.get_state = function () {\n\t\t\tvar state = parent.get_state.apply(this, arguments);\n\t\t\tif(this.settings.checkbox.tie_selection) { return state; }\n\t\t\tstate.checkbox = this._data.checkbox.selected.slice();\n\t\t\treturn state;\n\t\t};\n\t\tthis.set_state = function (state, callback) {\n\t\t\tvar res = parent.set_state.apply(this, arguments);\n\t\t\tif(res && state.checkbox) {\n\t\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\t\tthis.uncheck_all();\n\t\t\t\t\tvar _this = this;\n\t\t\t\t\t$.each(state.checkbox, function (i, v) {\n\t\t\t\t\t\t_this.check_node(v);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tdelete state.checkbox;\n\t\t\t\tthis.set_state(state, callback);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\tthis.refresh = function (skip_loading, forget_state) {\n\t\t\tif(this.settings.checkbox.tie_selection) {\n\t\t\t\tthis._data.checkbox.selected = [];\n\t\t\t}\n\t\t\treturn parent.refresh.apply(this, arguments);\n\t\t};\n\t};\n\n\t// include the checkbox plugin by default\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\n}));\n"],
  "mappings": "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",
  "names": ["i"]
}
